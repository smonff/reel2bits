# If you have any doubts about what a setting does,
# check https://docs-develop.reel2bits.org/installation/configuration.html
# The current file might not have all the available keys.

FLASK_ENV=production

# The tag of the image we should use
# (it will be interpolated in docker-compose file)
# You can comment or ignore this if you're not using docker
REEL2BITS_VERSION=latest

REEL2BITS_FRONTEND_PATH=/srv/reel2bits/front/dist

# Set this variables to bind the API server to another interface/port
# example: REEL2BITS_API_IP=0.0.0.0
# example: REEL2BITS_API_PORT=5678
REEL2BITS_API_IP=127.0.0.1
REEL2BITS_API_PORT=8000

# ActivityPub and domain setup
# You need to set this even if AP is disabled
REEL2BITS_HOSTNAME=myinstance.coolname.tld
REEL2BITS_PROTOCOL=https

# Enable or disable ActibityPub exchanges
AP_ENABLED=True

# Max upload size capped on nginx side
NGINX_MAX_BODY_SIZE=500M

# Please generate me with: openssl rand -hex 42
SECRET_KEY=38rufm3q8uft38gjqh-g31g3j0
# Please generate me with: openssl rand -hex 5
SECURITY_PASSWORD_SALT=omgponies

# Database configuration
# Examples:
#  SQLALCHEMY_DATABASE_URI=postgresql://<user>:<password>@<host>:<port>/<database>
#  SQLALCHEMY_DATABASE_URI=postgresql://reel2bits:passw0rd@localhost:5432/reel2bits_database
# Use the next one if you followed the Linux installation guide
# SQLALCHEMY_DATABASE_URI=postgresql://reel2bits@:5432/reel2bits
SQLALCHEMY_DATABASE_URI=postgresql://postgres@postgres/postgres

CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# Where uploaded files (such as audio tracks and waveforms) should be stored
# on your system?
# (Ensure this directory actually exists)
# Sounds and Waveforms directories have to be under the default folder
UPLOADS_DEFAULT_DEST=/data/uploads
UPLOADED_SOUNDS_DEST=/data/uploads/sounds
UPLOADED_WAVEFORMS_DEST=/data/uploads/waveforms

# Set this to where your SPA index is
# relative to the docker path (default: /frontend/index.html)
REEL2BITS_SPA_HTML=/frontend/index.html
