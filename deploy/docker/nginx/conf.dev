user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        listen [::]:80;

        include /etc/nginx/reel2bits_proxy.conf;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        access_log /var/log/nginx/reel2bits.access.log;
        error_log /var/log/nginx/reel2bits.error.log error;

        # compression settings
        gzip on;
        gzip_comp_level    5;
        gzip_min_length    256;
        gzip_proxied       any;
        gzip_vary          on;

        gzip_types
                application/javascript
                application/vnd.geo+json
                application/vnd.ms-fontobject
                application/x-font-ttf
                application/x-web-app-manifest+json
                font/opentype
                image/bmp
                image/svg+xml
                image/x-icon
                text/cache-manifest
                text/css
                text/plain
                text/vcard
                text/vnd.rim.location.xloc
                text/vtt
                text/x-component
                text/x-cross-domain-policy;

        # end of compression settings

        client_max_body_size 1G;

        location /static {
                root /frontend;
                try_files $uri $uri/ @proxy;
        }

        location / {
            try_files $request_uri @proxy;
        }

        location /front/ {
            proxy_pass http://front:8081/;
            # uncomment the following line and comment the proxy_pass one
            # to use the frontend built with "yarn build"
            alias /frontend/;
        }

        location @proxy {
            include /etc/nginx/reel2bits_proxy.conf;
            proxy_pass http://api:8000;
        }

        location /_protected/media/sounds {
                # Same path as UPLOADS_DEFAULT_DEST in config.py but with /sounds
                alias ${APP_UPLOADS_SOUNDS};
        }

        location /_protected/media/waveforms {
                # Same path as UPLOADS_DEFAULT_DEST in config.py but with /waveforms
                alias ${APP_UPLOADS_WAVEFORMS};
        }
    }
}